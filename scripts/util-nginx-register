#! /bin/bash

# Available system vars:
#
# _WWW="$_R/www"
# _WWW_DEV="$_R/www/dev"
# _WWW_PROD="$_R/www/prod"
#
# _SITES="$_R/sites"
# _SITE_CONF="$_R/site-conf"
#
# _BOX="$_R/.box"
# _BIN="$_R/.bin"
# _CACHE="$_R/.cache"
#
# Available Local Vars
#
# ENV="$1"
# STACK="$2"
# DOMAIN="$NAME.$ENV.traaidmark.com"
# SITE_PATH="$_SITES/$DOMAIN"
# SITE_ROOT="$SITE_PATH/www"
# SITE_MODE="Local"
# SITE_REPO="$REPO"
#
# 1. VARIABLES +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

CONF_PATH="$SITES/$DOMAIN"

# 1. END +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# 2. SCRIPT ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

echo "- Register [$STACK] $DOMAIN in NGINX:";
if [ -d $CONF_PATH ]
then
  rm -rf $CONF_PATH && echo "-- âœ… Removed existing conf file";
fi

if [ $STACK = "wordpress" ]
then
  echo "- ðŸ¤  Creating wordpress conf file.";

  echo "server {
    listen 80;
    listen [::]:80;

    server_name $DOMAIN;

    root /var/www/$ENV/$STACK/$DOMAIN;
    index index.php;
    
    location / {
      # First attempt to serve request as file, then    
      # as directory, then fall back to displaying a 404.    
      try_files \$uri \$uri/ /index.php?\$args;
    }

    # pass the PHP scripts to FastCGI server listening on wordpress:9000  
    
    location ~ \.php$ {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
      fastcgi_param SCRIPT_NAME \$fastcgi_script_name;
      include snippets/fastcgi-php.conf;
    }
  }" > $CONF_PATH && echo "-- âœ… Created conf file";
fi

# 2.1. END ---------------------------------------------------------------------

# 2. END +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
