#! /bin/bash

# Available system vars:
#
# _WWW="$_R/www"
# _WWW_DEV="$_R/www/dev"
# _WWW_PROD="$_R/www/prod"
#
# _SITES="$_R/sites"
# _SITE_CONF="$_R/site-conf"
#
# _BOX="$_R/.box"
# _BIN="$_R/.bin"
# _CACHE="$_R/.cache"
#
# CMD: create-site $ENV $STACK $NAME $REPO
#
# 1. VARIABLES +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

export ENV="dev"
export STACK="wordpress"
export NAME="$1"
export WWW="/var/www/dev/wordpress"

# BUILD SITE VARS

export DOMAIN="$NAME.$ENV.traaidmark.com"
export PROJECT_PATH="$WWW/$DOMAIN"
export SITE_ROOT="$PROJECT_PATH/www"

if [ -z $2 ]
then
  export SITE_MODE="Local"
else
  export SITE_REPO="$2"
  export SITE_MODE="Repository"
fi

# BUILD PROCESS VARS

DIR_META="$_BOX/dev-meta"
BOX_THEMES="$_BOX/wordpress/themes";
BOX_PLUGINS="$_BOX/wordpress/plugins";
WP_PLUGINS="$SITE_ROOT/wp-content/plugins";
WP_THEMES="$SITE_ROOT/wp-content/themes";

CONF_PATH="$_SITE_CONF/$DOMAIN"


# BUILD ENV VARS

TASK_TYPE="CREATE";
TASK_NAME="[$STACK] $DOMAIN";

# 1. END +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# 2. SCRIPT ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

echo ""
echo "+"
echo "+ $TASK_TYPE: $TASK_NAME"
echo "+"
echo "++ Environment: $ENV"
echo "++ Stack: $STACK"
echo "++ Site:"
echo "++ Domain: $DOMAIN"
echo "++ Path: $SITE_ROOT"
echo "++ Mode: $SITE_MODE"
[ ! -z $SITE_REPO ] && echo "++ Repository Url: $SITE_REPO";
echo "+"
echo ""

# 2.1. CREATE SITE -------------------------------------------------------------

# 2.1.1. CLEAN INSTALL

echo "- ðŸ¤  Clean existing installs";

if [ -d $PROJECT_PATH ]
then
  rm -rf $PROJECT_PATH && echo "-- âœ… Removed $PROJECT_PATH";
  
else 
  echo "-- âœ… This is a clean install!";
fi

# 2.1.1. END

# 2.1.2. CLONE REPOSITORY

echo "- ðŸ¤  Creating project from new repository";
  git clone $SITE_REPO $PROJECT_PATH && echo "-- âœ… Cloned site into $PROJECT_PATH!";

# 2.1.2. END

# 2.1.3. TODO: ADD ERROR CHECKING FOR FOLDER STRUCTURE
# 2.1.3. END

# 2.1. END ---------------------------------------------------------------------

# 2.2. APPLY DEV META ----------------------------------------------------------

echo "- ðŸ¤  Apply dev meta";

cp -r $DIR_META/. $SITE_ROOT && echo "-- âœ… Copied dev meta files";

# 2.2. END ---------------------------------------------------------------------

# 2.3. WORDPRESS TASKS ---------------------------------------------------------

# 2.3.1. DOWNLOAD

echo "- ðŸ¤  Download Wordpress Core";

wp core download --path="$SITE_ROOT" && echo "-- âœ… Downloaded Wordpress core";

# 2.3.1. END

# 2.3.2. CREATE CONFIG

echo "- ðŸ¤  Create Wordpress config file";

wp config create --path="$SITE_ROOT" --dbname="trm-client-wp-$NAME-db" --dbuser=$_DATABASE_USER --dbpass=$_DATABASE_PASSWORD --dbhost="localhost" && echo "-- âœ… Config file created";

# 2.3.2. END

# 2.3.3. CREATE DATABASE

echo "- ðŸ¤  Create Database";

wp db create --path="$SITE_ROOT" && echo "-- âœ… Database created";

# 2.3.3. END

# 2.3.4. INSTALL

echo "- ðŸ¤  Install Wordpress";

wp core install --path="$SITE_ROOT" --url="http://$DOMAIN" --title="$NAME" --admin_user="$_WP_ADMIN_USER" --admin_password="$_WP_ADMIN_PASSWORD" --admin_email="$_WP_ADMIN_EMAIL" --skip-email && echo "-- âœ… Wordpress Installed";

# 2.3.4. END

# 2.3.5. SCAFFOLD

echo "- ðŸ¤  Scaffold Wordpress Stack";

cp -r $BOX_THEMES/. $WP_THEMES  && echo "-- âœ… Copied Wordpress themes from Box";
cp -r $BOX_PLUGINS/. $WP_PLUGINS  && echo "-- âœ… Copied Wordpress plugins from Box";

wp plugin install autodescription updraftplus host-analyticsjs-local autoptimize wp-cloudflare-page-cache enable-media-replace better-search-replace custom-post-type-ui --path="$SITE_ROOT"  && echo "-- âœ… Installed default plugins";

# 2.3.5. END

# 2.3. END ---------------------------------------------------------------------

# 2.4. BACKUP ------------------------------------------------------------------
# 2.4. END ---------------------------------------------------------------------

# 2.5. COMMIT ------------------------------------------------------------------

./util-git-commit "initial project scaffold";

# 2.5. END ---------------------------------------------------------------------

# 2.6. REGISTER SITE -----------------------------------------------------------

# 2.6.1. CLEAN CONF FILE

echo "- ðŸ¤  Register [$STACK] $DOMAIN in NGINX:";
if [ -d $CONF_PATH ]
then
  rm -rf $CONF_PATH && echo "-- âœ… Removed existing conf file";
fi

echo "server {
    listen 80;
    listen [::]:80;

    server_name $DOMAIN;

    root $SITE_ROOT;
    index index.php;
    
    location / {
      # First attempt to serve request as file, then    
      # as directory, then fall back to displaying a 404.    
      try_files \$uri \$uri/ /index.php?\$args;
    }

    # pass the PHP scripts to FastCGI server listening on wordpress:9000  
    
    location ~ \.php$ {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
      fastcgi_param SCRIPT_NAME \$fastcgi_script_name;
    }
  }" > $CONF_PATH && echo "-- âœ… Created conf file";

  sudo cp -r $_SITE_CONF/. $SITES_AVAILABLE  && echo "-- âœ… Copied conf files to sites-available";

# 2.6.1. END

server-nginx restart;

# 2.6. END ---------------------------------------------------------------------

echo ""
echo "= $TASK_NAME COMPLETE"

# 2. END +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++